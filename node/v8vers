#!/usr/bin/perl -W

#
# Copyright 2012 David Pacheco. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE. 
#

#
# v8vers: determines for a given node version what V8 versions it corresponds
# to. This tool is intended to be used in a pipeline like this:
#
#    (for version in $(git tag | grep 'v0.[46].'); do
#            git checkout $version;
#            echo node $version;
#            egrep 'define.*(MAJOR_VERSION|MINOR_VERSION|BUILD_NUMBER|PATCH)' \
#                deps/v8/src/version.cc;
#    done) | v8vers
#
# The pipeline will emit blocks of the form:
#
#	node NODE_VERSION
#	#define MAJOR_VERSION M
#	#define MINOR_VERSION m
#	#define BUILD_NUMBER  b
#       #define PATCH_LEVEL   p
#
# and this tool will emit a table like this:
#
#	NODE_VERSION    M.m.b.p
#

use strict;

printf("%-20s %s\n", "NODE", "V8");

my $node;
my $v8vers = {};

while (<>) {
	if (/^node (.*)/) {
		if (defined($node)) {
			report();
		}

		$node = $1;
		$v8vers = {};
		next;
	}

	if (!/^#define\s+(\w+)\s+(\d+)/) {
		warn "unrecognized line: $_";
		next;
	}

	$v8vers->{$1} = $2;
}

sub report
{
	printf("%-20s %d.%d.%d.%d\n", $node,
	    $v8vers->{MAJOR_VERSION}, $v8vers->{MINOR_VERSION},
	    $v8vers->{BUILD_NUMBER}, $v8vers->{PATCH_LEVEL});
}
